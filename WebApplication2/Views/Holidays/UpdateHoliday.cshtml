@model WebApplication2.Models.Holiday

@{
    ViewBag.Title = "UpdateHoliday";
}

<h2>UpdateHoliday</h2>



@using (Html.BeginForm("SaveHoliday", "Holidays"))
{
    @Html.AntiForgeryToken()

    if (ViewBag.Message != null)
    {
        <div style="border:solid 1px green">
            @ViewBag.Message

        </div>

    }
    <div class="form-horizontal">

        <hr />

        <div style="background-color: white;
    border: none;
    color: black;
        margin: 30px 800px;
            text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    padding: 5px 10px;
    cursor: pointer;">

            @Html.ActionLink("X", "Index")
            @*<input type="button" value="X" onclick="@("window.location.href='"+Url.Action("Index","Holidays")+ "'");"
                );*@

        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, "Holiday Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="hidden" name="holidayID" value="@ViewBag.Holiday.Id" />
                @*@Html.EditorFor(model => model.Name, new { @value = ViewBag.Holiday.Name, htmlAttributes = new { @class = "form-control" } })*@
                <input type="text" name="Name" class="form-control" value="@ViewBag.Holiday.Name" /> 
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-1" style="padding-left: 216px;">
                <div class="checkbox" style="display:inherit;">
                    <input type="checkbox" name="OccursAnnually" value="@ViewBag.Holiday.OccursAnually" />
                    <label for="OccursAnnualy" style="width:147px; cursor:auto;" class="control-label col-md-2">Occurs Every Year</label>
                    @*@Html.EditorFor(model => model.OccursAnually)*@
                    @*@Html.LabelFor(model => model.OccursAnually, "This occurs every year", htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @*@Html.ValidationMessageFor(model => model.OccursAnually, "", new { @class = "text-danger" })*@
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StartsAt, "Start Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartsAt, new { htmlAttributes = new { @class = "form-control" , @Value = ViewBag.Holiday.StartsAt} })
                @Html.ValidationMessageFor(model => model.StartsAt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndsAt, "End Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndsAt, new { htmlAttributes = new { @class = "form-control" , @Value = ViewBag.Holiday.EndsAt } })
                @Html.ValidationMessageFor(model => model.EndsAt, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfDaysOff, "Days Off", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.NumberOfDaysOff, "1", new { disabled = "disabled", @readonly = "readonly" , @Value = ViewBag.Holiday.EndsAt })
                @Html.ValidationMessageFor(model => model.NumberOfDaysOff, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="addNew" value="Save" class="btn btn-default" style="background-color: #4CAF50;
    border: none;
    color: white;
            text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    padding: 5px 10px;
    cursor: pointer;" />
            </div>
        </div>
    </div>
}





@Scripts.Render("~/bundles/jquery")
<script>
        $(document).ready(function () {
            $("#StartsAt").datepicker();
            $("#EndsAt").datepicker();

         
            var today = new Date()
            $('#StartsAt,#EndsAt').val(today.getMonth() + 1 + '/' + today.getDate() + '/' + today.getFullYear());

            $('#NumberOfDaysOff').val(1);


            $('#StartsAt, #EndsAt').on('changeDate', function (ev) {
                if ($("#StartsAt").val() && $("#EndsAt").val()) {

                    var start = $("#StartsAt").val();
                    var startD = new Date(start);
                    var end = $("#EndsAt").val();
                    var endD = new Date(end);
                    var diff = parseInt((endD.getTime() - startD.getTime()) / (24 * 3600 * 1000));
                    $("#NumberOfDaysOff").val(++diff);
                    // $("#NumberOfDaysOff").val(5);

                    if (endD.getTime() < startD.getTime()) {
                        //alert("End date must be greater than the start date")
                         $("#NumberOfDaysOff").val("Error!");
                    }

                }


                //else  {
                //   alert("Please enter both dates");
                //}

            });

            $("#addNew").click(function () {

                if ($("#Name").val()=='') {

                    alert("Name must not be empty!");
                    return false;
                }

                var start = $("#StartsAt").val();
                var startD = new Date(start);
                var end = $("#EndsAt").val();
                var endD = new Date(end);
                if (endD.getTime() < startD.getTime()) {
                    alert("End date must be greater than the start date")
                    // $("#NumberOfDaysOff").val("Error!");
                    return false;
                }
            })

        });

</script>

